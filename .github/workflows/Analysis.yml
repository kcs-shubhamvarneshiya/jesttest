name: Check testcases and quality gate status

on:
  push:
    branches:
      - "*"

  pull_request:
    branches:
      - "*"

jobs:
  sonarqube-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run testcases with generatig coverage report
        run: |
          npm test --coverage --coverageReporters=text-lcov | tee coverage.lcov
          echo "exit_code=$((${PIPESTATUS[0]}))" >> $GITHUB_ENV

      - name: Check test exit code
        run: |
          if [ $exit_code -ne 0 ]; then
              echo "Test cases failed !! Exiting..."
              exit 1
            else
              echo "cheers up, all Test cases are passed !!"
            fi

           BNAME=$(echo $GITHUB_REF)
           echo "Branch name : $BNAME"
           echo "BRANCH_NAME=$BNAME" >> $GITHUB_ENV

        env:
          BRANCH_NAME: $BNAME

      - name: Scanning the project with sonarQube scanner
        run: |
          echo "Branch Name  : $BRANCH_NAME"

          npm install -g sonarqube-scanner

          sonar-scanner \
            -Dsonar.host.url=${{secrets.SERVER_URL}} \
            -Dsonar.projectKey=${{secrets.PROJECT_KEY}} \
            -Dsonar.sources=./src \
            -Dsonar.test.inclusions=test/index.test.js \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.login=${{secrets.PROJECT_TOKEN}} \
            -Dsonar.branch.name=$BRANCH_NAME

      - name: identify SonarQube Quality Gate status
        id: quality_gate_status
        run: |
          echo "Identifying quality gate status..."
          echo "Branch Name :  $BRANCH_NAME"

          STATUS=$(curl -s "${{secrets.SERVER_URL}}/api/qualitygates/project_status?projectKey=${{secrets.PROJECT_KEY}}&branch=${BRANCH_NAME}" -u "${{secrets.LOGIN_TOKEN}}" | jq -r '.projectStatus.status')
          echo "Quality Gate Status for branch $BRANCH_NAME: $STATUS"
          echo "QUALITY_GATE_STATUS=$STATUS" >> $GITHUB_ENV

      - name: Check Quality Gate status
        run: |
          if [ "$QUALITY_GATE_STATUS" != "OK" ]; then
            echo "SonarQube Quality Gate Failed for branch $BRANCH_NAME!!"
            exit 1
          else
            echo "SonarQube Quality Gate passed for branch $BRANCH_NAME!!"
          fi
